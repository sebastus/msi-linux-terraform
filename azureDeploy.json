{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "password",
        "allowedValues": [
          "password",
          "sshPublicKey"
        ],
        "metadata": {
          "description": "Authentication type"
        }
      },
      "adminPasswordorSSHKey": {
        "type": "securestring",
        "metadata": {
          "description": "OS Admin password or SSH Key depending on value of authentication type"
        }
      },
      "dnsLabelPrefix": {
        "type": "string",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        },
        "defaultValue": "[concat('msi',uniquestring(resourceGroup().id,deployment().name))]"
      },
      "location": {
        "type": "string",
        "metadata": {
          "description": "The Location For the resources"
        },
        "defaultValue": "[resourceGroup().location]"
      },
      "vmSize": {
        "type": "string",
        "metadata": {
          "description": "The size of the VM to create"
        },
        "defaultValue": "Standard_D1_V2"
      },
      "azureCLI2DockerImage": {
        "type": "string",
        "metadata": {
          "description": "The Docker image to run the azure CLI from"
        },
        "defaultValue": "azuresdk/azure-cli-python:latest"
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        },
        "defaultValue": "https://raw.githubusercontent.com/sebastus/msi-linux-terraform/master"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation."
        },
        "defaultValue": ""
      },
      "publisher": {
        "type": "string",
        "metadata": {
          "description": "The VM Publisher"
        },
        "defaultValue": "Canonical"
      },
      "offer": {
        "type": "string",
        "metadata": {
          "description": "The VM Offer"
        },
        "defaultValue": "UbuntuServer"
      },
      "SKU": {
        "type": "string",
        "metadata": {
          "description": "The VM SKU"
        },
        "defaultValue": "17.10"
      },
      "subscriptionID": {
        "type": "string",
        "metadata": {
          "description": "Your azure subscription id."
        },
        "defaultValue": "743f6ed6-83a8-46f0-822d-ea93b953952d"
      }
    },
    "variables": {
      "infraStorageAccountName": "[take(concat('storeinfra', uniquestring(resourceGroup().id), parameters('dnsLabelPrefix')),24)]",
      "stateStorageAccountName": "[take(concat('storestate', uniquestring(resourceGroup().id), parameters('dnsLabelPrefix')),24)]",
      "nicName": "[concat('nic',uniquestring(resourceGroup().id,deployment().name))]",
      "networkSecurityGroupName": "[concat('nsg',uniquestring(resourceGroup().id,deployment().name))]",
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet",
      "subnetPrefix": "10.0.0.0/24",
      "publicIPAddressName": "[concat('pip',uniquestring(resourceGroup().id,deployment().name))]",
      "vmName": "[concat('vm',uniquestring(resourceGroup().id,deployment().name))]",
      "virtualNetworkName": "[concat('vnet',uniquestring(resourceGroup().id,deployment().name))]",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
      "linuxConfigurationChosen": "[concat('linuxConfiguration', parameters('authenticationType'))]",
      "linuxConfigurationsshPublicKey": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordorSSHKey')]"
            }
          ]
        }
      },
      "linuxConfigurationpassword": {
        "disablePasswordAuthentication": false
      },
      "adminPasswordChosen": "[concat('adminPassword', parameters('authenticationType'))]",
      "adminPasswordsshPublicKey": "",
      "adminPasswordpassword": "[parameters('adminPasswordorSSHKey')]",
      "containerName": "msi",
      "createVMUrl": "[concat(parameters('_artifactsLocation'), '/nestedTemplates/createVM.json', parameters('_artifactsLocationSasToken'))]",
      "createRBACUrl": "[concat(parameters('_artifactsLocation'), '/nestedTemplates/setUpRbac.json', parameters('_artifactsLocationSasToken'))]",
      "installParm1": "[concat(' -u ', parameters('adminUsername')]",
      "installParm2": "[concat(' -s ', parameters('subscriptionID')]",
      "installParm3": "[concat(' -a ', variables('stateStorageAccountName'))]",
      "installParm4": "[concat(' -k ', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('stateStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
      "installParm5": "[concat(' -l ', reference(concat(resourceId('Microsoft.Compute/virtualMachines/', variables('vmName')),'/providers/Microsoft.ManagedIdentity/Identities/default'),'2015-08-31-PREVIEW').principalId)]"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('infraStorageAccountName')]",
        "apiVersion": "2017-06-01",
        "location": "[parameters('Location')]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {}
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('stateStorageAccountName')]",
        "apiVersion": "2017-06-01",
        "location": "[parameters('Location')]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {}
      },
      {
        "apiVersion": "2016-09-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('Location')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsLabelPrefix')]"
          }
        }
      },
      {
        "apiVersion": "2016-09-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[parameters('Location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]"
              }
            }
          ]
        }
      },
      {
        "name": "[variables('networkSecurityGroupName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2016-09-01",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-ssh",
              "properties": {
                "priority": 1000,
                "sourceAddressPrefix": "*",
                "protocol": "Tcp",
                "destinationPortRange": "22",
                "access": "Allow",
                "direction": "Inbound",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2016-09-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "location": "[parameters('Location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                },
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
          }
        }
      },
      {
        "name": "creatingVM",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/', variables('infraStorageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('createVMUrl')]"
          },
          "parameters": {
            "adminUsername": {
              "value": "[parameters('adminUsername')]"
            },
            "adminPassword": {
              "value": "[variables(variables('adminPasswordChosen'))]"
            },
            "location": {
              "value": "[parameters('location')]"
            },
            "vmSize": {
              "value": "[parameters('vmSize')]"
            },
            "vmName": {
              "value": "[variables('VMName')]"
            },
            "nicName": {
              "value": "[variables('nicName')]"
            },
            "infraStorageAccountName": {
              "value": "[variables('infraStorageAccountName')]"
            },
            "linuxConfiguration": {
              "value": "[variables(variables('linuxConfigurationChosen'))]"
            },
            "publisher": {
              "value": "[parameters('publisher')]"
            },
            "offer": {
              "value": "[parameters('offer')]"
            },
            "SKU": {
              "value": "[parameters('SKU')]"
            }
          }
        }
      },
      {
        "name": "creatingRBAC",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/creatingVM"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('createRBACUrl')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "principalId": {
              "value": "[reference('Microsoft.Resources/deployments/creatingVM', '2016-09-01').outputs.principalId.value]"
            },
            "infraStorageAccountName": {
              "value": "[variables('infraStorageAccountName')]"
            }
          }
        }
      },
      {
        "name": "[concat(variables('vmName'),'/customscriptextension')]",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "apiVersion": "2017-03-30",
        "location": "[parameters('Location')]",
        "dependsOn": [
          "Microsoft.Resources/deployments/creatingRBAC"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[concat(parameters('_artifactsLocation'), '/scripts/infra.sh', parameters('_artifactsLocationSasToken'))]",
              "[concat(parameters('_artifactsLocation'), '/scripts/install.sh', parameters('_artifactsLocationSasToken'))]"
            ]
          },
          "protectedSettings": {
            "commandToExecute": "[concat('bash infra.sh && bash install.sh ', installParm1, installParm2, installParm3, installParm4, installParm5)]"
          }
        }
      }
    ],
    "outputs": {
      "hostname": {
        "type": "string",
        "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
      },
      "principalId": {
        "type": "string",
        "value": "[reference('Microsoft.Resources/deployments/creatingVM', '2016-09-01').outputs.principalId.value]"
      }
    }
  }